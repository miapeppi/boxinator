// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using boxinator.Models;

namespace boxinator.Migrations
{
    [DbContext(typeof(BoxinatorDbContext))]
    partial class BoxinatorDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("boxinator.Models.BoxType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BoxType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Premium",
                            Weight = 8
                        },
                        new
                        {
                            Id = 2,
                            Name = "Deluxe",
                            Weight = 5
                        },
                        new
                        {
                            Id = 3,
                            Name = "Humble",
                            Weight = 2
                        },
                        new
                        {
                            Id = 4,
                            Name = "Basic",
                            Weight = 1
                        });
                });

            modelBuilder.Entity("boxinator.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ZoneId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ZoneId");

                    b.ToTable("Country");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Finland",
                            ZoneId = 2
                        },
                        new
                        {
                            Id = 2,
                            Name = "Sweden",
                            ZoneId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Norway",
                            ZoneId = 1
                        },
                        new
                        {
                            Id = 4,
                            Name = "USA",
                            ZoneId = 4
                        },
                        new
                        {
                            Id = 5,
                            Name = "Germany",
                            ZoneId = 2
                        },
                        new
                        {
                            Id = 6,
                            Name = "China",
                            ZoneId = 3
                        },
                        new
                        {
                            Id = 7,
                            Name = "Australia",
                            ZoneId = 3
                        },
                        new
                        {
                            Id = 8,
                            Name = "Egypt",
                            ZoneId = 5
                        },
                        new
                        {
                            Id = 9,
                            Name = "Brazilia",
                            ZoneId = 4
                        });
                });

            modelBuilder.Entity("boxinator.Models.Domain.Box", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BoxTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("ShipmentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BoxTypeId");

                    b.HasIndex("ShipmentId");

                    b.ToTable("Box");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BoxTypeId = 1,
                            Color = "rgb(32,178,170)",
                            ShipmentId = 1
                        },
                        new
                        {
                            Id = 2,
                            BoxTypeId = 1,
                            Color = "rgb(123,765,3)",
                            ShipmentId = 1
                        },
                        new
                        {
                            Id = 3,
                            BoxTypeId = 2,
                            Color = "rgb(235, 64, 52)",
                            ShipmentId = 2
                        },
                        new
                        {
                            Id = 4,
                            BoxTypeId = 3,
                            Color = "rgb(235, 223, 52)",
                            ShipmentId = 3
                        },
                        new
                        {
                            Id = 5,
                            BoxTypeId = 4,
                            Color = "rgb(232, 52, 235)",
                            ShipmentId = 3
                        },
                        new
                        {
                            Id = 6,
                            BoxTypeId = 4,
                            Color = "rgb(235, 201, 52)",
                            ShipmentId = 3
                        },
                        new
                        {
                            Id = 7,
                            BoxTypeId = 2,
                            Color = "rgb(129, 163, 36)",
                            ShipmentId = 4
                        },
                        new
                        {
                            Id = 8,
                            BoxTypeId = 3,
                            Color = "rgb(163, 36, 97)",
                            ShipmentId = 4
                        },
                        new
                        {
                            Id = 9,
                            BoxTypeId = 3,
                            Color = "rgb(230, 197, 213)",
                            ShipmentId = 5
                        },
                        new
                        {
                            Id = 10,
                            BoxTypeId = 1,
                            Color = "rgb(89, 76, 76)",
                            ShipmentId = 6
                        },
                        new
                        {
                            Id = 11,
                            BoxTypeId = 1,
                            Color = "rgb(31, 98, 128)",
                            ShipmentId = 6
                        },
                        new
                        {
                            Id = 12,
                            BoxTypeId = 3,
                            Color = "rgb(207, 198, 171)",
                            ShipmentId = 6
                        },
                        new
                        {
                            Id = 13,
                            BoxTypeId = 4,
                            Color = "rgb(136, 3, 252)",
                            ShipmentId = 7
                        },
                        new
                        {
                            Id = 14,
                            BoxTypeId = 2,
                            Color = "rgb(248, 252, 3)",
                            ShipmentId = 8
                        },
                        new
                        {
                            Id = 15,
                            BoxTypeId = 2,
                            Color = "rgb(51, 0, 31)",
                            ShipmentId = 8
                        },
                        new
                        {
                            Id = 16,
                            BoxTypeId = 4,
                            Color = "rgb(54, 62, 74)",
                            ShipmentId = 9
                        },
                        new
                        {
                            Id = 17,
                            BoxTypeId = 3,
                            Color = "rgb(133, 133, 133)",
                            ShipmentId = 9
                        },
                        new
                        {
                            Id = 18,
                            BoxTypeId = 1,
                            Color = "rgb(255, 186, 186)",
                            ShipmentId = 9
                        },
                        new
                        {
                            Id = 19,
                            BoxTypeId = 2,
                            Color = "rgb(168, 76, 57)",
                            ShipmentId = 10
                        },
                        new
                        {
                            Id = 20,
                            BoxTypeId = 2,
                            Color = "rgb(35, 87, 20)",
                            ShipmentId = 11
                        },
                        new
                        {
                            Id = 21,
                            BoxTypeId = 3,
                            Color = "rgb(8, 46, 48)",
                            ShipmentId = 12
                        },
                        new
                        {
                            Id = 22,
                            BoxTypeId = 4,
                            Color = "rgb(0, 10, 84)",
                            ShipmentId = 13
                        },
                        new
                        {
                            Id = 23,
                            BoxTypeId = 4,
                            Color = "rgb(255, 0, 187)",
                            ShipmentId = 14
                        },
                        new
                        {
                            Id = 24,
                            BoxTypeId = 1,
                            Color = "rgb(255, 0, 0)",
                            ShipmentId = 14
                        },
                        new
                        {
                            Id = 25,
                            BoxTypeId = 2,
                            Color = "rgb(0, 0, 255)",
                            ShipmentId = 14
                        });
                });

            modelBuilder.Entity("boxinator.Models.Domain.Shipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("Cost")
                        .HasColumnType("float");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("UserId");

                    b.ToTable("Shipment");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Keskuskatu 1",
                            Cost = 100.0,
                            CountryId = 1,
                            FirstName = "Petteri",
                            LastName = "Smith",
                            UserId = 1,
                            ZipCode = "00100"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Kungsgatan 54",
                            Cost = 200.0,
                            CountryId = 2,
                            FirstName = "Martta",
                            LastName = "Johnsson",
                            UserId = 1,
                            ZipCode = "11122"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Kungsgatan 54",
                            Cost = 150.0,
                            CountryId = 2,
                            FirstName = "Martta",
                            LastName = "Johnsson",
                            UserId = 2,
                            ZipCode = "11122"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Pirjontie 10",
                            Cost = 258.0,
                            CountryId = 9,
                            FirstName = "Peppi",
                            LastName = "Mäkelä",
                            UserId = 2,
                            ZipCode = "11122"
                        },
                        new
                        {
                            Id = 5,
                            Address = "Kaivokatu 10",
                            Cost = 4000.0,
                            CountryId = 1,
                            FirstName = "Sebastian",
                            LastName = "Söderholm",
                            UserId = 2,
                            ZipCode = "06100"
                        },
                        new
                        {
                            Id = 6,
                            Address = "Pirjontie 10",
                            Cost = 156.0,
                            CountryId = 9,
                            FirstName = "Peppi",
                            LastName = "Mäkelä",
                            UserId = 2,
                            ZipCode = "11122"
                        },
                        new
                        {
                            Id = 7,
                            Address = "Pirjontie 10",
                            Cost = 987.0,
                            CountryId = 9,
                            FirstName = "Peppi",
                            LastName = "Mäkelä",
                            UserId = 3,
                            ZipCode = "11122"
                        },
                        new
                        {
                            Id = 8,
                            Address = "Pirjontie 10",
                            Cost = 248.0,
                            CountryId = 9,
                            FirstName = "Peppi",
                            LastName = "Mäkelä",
                            UserId = 4,
                            ZipCode = "11122"
                        },
                        new
                        {
                            Id = 9,
                            Address = "Kaivokatu 10",
                            Cost = 4006.0,
                            CountryId = 1,
                            FirstName = "Sebastian",
                            LastName = "Söderholm",
                            UserId = 4,
                            ZipCode = "06100"
                        },
                        new
                        {
                            Id = 10,
                            Address = "Kaivokatu 10",
                            Cost = 824.0,
                            CountryId = 1,
                            FirstName = "Sebastian",
                            LastName = "Söderholm",
                            UserId = 3,
                            ZipCode = "06100"
                        },
                        new
                        {
                            Id = 11,
                            Address = "Keskuskatu 1",
                            Cost = 36.0,
                            CountryId = 1,
                            FirstName = "Petteri",
                            LastName = "Smith",
                            UserId = 4,
                            ZipCode = "00100"
                        },
                        new
                        {
                            Id = 12,
                            Address = "Keskuskatu 1",
                            Cost = 51.0,
                            CountryId = 1,
                            FirstName = "Petteri",
                            LastName = "Smith",
                            UserId = 3,
                            ZipCode = "00100"
                        },
                        new
                        {
                            Id = 13,
                            Address = "Kungsgatan 54",
                            Cost = 364.0,
                            CountryId = 2,
                            FirstName = "Martta",
                            LastName = "Johnsson",
                            UserId = 3,
                            ZipCode = "11122"
                        },
                        new
                        {
                            Id = 14,
                            Address = "Kungsgatan 54",
                            Cost = 645.0,
                            CountryId = 2,
                            FirstName = "Martta",
                            LastName = "Johnsson",
                            UserId = 3,
                            ZipCode = "11122"
                        });
                });

            modelBuilder.Entity("boxinator.Models.Domain.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Status");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "CREATED"
                        },
                        new
                        {
                            Id = 2,
                            Name = "RECIEVED"
                        },
                        new
                        {
                            Id = 3,
                            Name = "INTRANSIT"
                        },
                        new
                        {
                            Id = 4,
                            Name = "COMPLETED"
                        },
                        new
                        {
                            Id = 5,
                            Name = "CANCELLED"
                        });
                });

            modelBuilder.Entity("boxinator.Models.Domain.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountType = "REGISTERED_USER",
                            Address = "Kungsgatan 54",
                            CountryId = 2,
                            Email = "awesomemartta@gmail.com",
                            FirstName = "Martta",
                            LastName = "Johnsson",
                            PhoneNumber = "16064650210",
                            ZipCode = "11122"
                        },
                        new
                        {
                            Id = 2,
                            AccountType = "ADMINISTRATOR",
                            Address = "Pirjontie 10",
                            CountryId = 9,
                            Email = "peppi.makela@gmail.com",
                            FirstName = "Peppi",
                            LastName = "Mäkelä",
                            PhoneNumber = "0504055679",
                            ZipCode = "00200"
                        },
                        new
                        {
                            Id = 3,
                            AccountType = "ADMINISTRATOR",
                            Address = "Kaivokatu 10",
                            CountryId = 1,
                            Email = "developer.musetech@gmail.com",
                            FirstName = "Sebastian",
                            LastName = "Söderholm",
                            PhoneNumber = "0400959078",
                            ZipCode = "06100"
                        },
                        new
                        {
                            Id = 4,
                            AccountType = "ADMINISTRATOR",
                            Address = "Tie 10",
                            CountryId = 8,
                            Email = "XXX",
                            FirstName = "Jani",
                            LastName = "Vihervuori",
                            PhoneNumber = "040123456",
                            ZipCode = "06830"
                        });
                });

            modelBuilder.Entity("boxinator.Models.Domain.Zone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryMultiplier")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Zone");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryMultiplier = 0,
                            Name = "Source Zone"
                        },
                        new
                        {
                            Id = 2,
                            CountryMultiplier = 10,
                            Name = "Europe"
                        },
                        new
                        {
                            Id = 3,
                            CountryMultiplier = 20,
                            Name = "Asia, Australia & Oceania"
                        },
                        new
                        {
                            Id = 4,
                            CountryMultiplier = 30,
                            Name = "Americas"
                        },
                        new
                        {
                            Id = 5,
                            CountryMultiplier = 40,
                            Name = "Africa"
                        });
                });

            modelBuilder.Entity("boxinator.Models.ShipmentStatusLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("ShipmentId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ShipmentId");

                    b.HasIndex("StatusId");

                    b.ToTable("ShipmentStatusLog");

                    b.HasData(
                        new
                        {
                            Id = 1,
<<<<<<< HEAD
                            Date = new DateTime(2021, 10, 25, 10, 55, 4, 902, DateTimeKind.Local).AddTicks(9837),
=======
                            Date = new DateTime(2021, 10, 25, 10, 53, 40, 718, DateTimeKind.Local).AddTicks(9956),
>>>>>>> jani
                            ShipmentId = 1,
                            StatusId = 1
                        },
                        new
                        {
                            Id = 2,
<<<<<<< HEAD
                            Date = new DateTime(2021, 10, 25, 10, 55, 4, 906, DateTimeKind.Local).AddTicks(6022),
=======
                            Date = new DateTime(2021, 10, 25, 10, 53, 40, 721, DateTimeKind.Local).AddTicks(6168),
>>>>>>> jani
                            ShipmentId = 1,
                            StatusId = 2
                        },
                        new
                        {
                            Id = 3,
<<<<<<< HEAD
                            Date = new DateTime(2021, 10, 25, 10, 55, 4, 906, DateTimeKind.Local).AddTicks(6250),
=======
                            Date = new DateTime(2021, 10, 25, 10, 53, 40, 721, DateTimeKind.Local).AddTicks(6202),
>>>>>>> jani
                            ShipmentId = 2,
                            StatusId = 1
                        },
                        new
                        {
                            Id = 4,
<<<<<<< HEAD
                            Date = new DateTime(2021, 10, 25, 10, 55, 4, 906, DateTimeKind.Local).AddTicks(6255),
=======
                            Date = new DateTime(2021, 10, 25, 10, 53, 40, 721, DateTimeKind.Local).AddTicks(6206),
>>>>>>> jani
                            ShipmentId = 2,
                            StatusId = 2
                        },
                        new
                        {
                            Id = 5,
<<<<<<< HEAD
                            Date = new DateTime(2021, 10, 25, 10, 55, 4, 906, DateTimeKind.Local).AddTicks(6259),
=======
                            Date = new DateTime(2021, 10, 25, 10, 53, 40, 721, DateTimeKind.Local).AddTicks(6209),
>>>>>>> jani
                            ShipmentId = 3,
                            StatusId = 1
                        },
                        new
                        {
                            Id = 6,
<<<<<<< HEAD
                            Date = new DateTime(2021, 10, 25, 10, 55, 4, 906, DateTimeKind.Local).AddTicks(6262),
=======
                            Date = new DateTime(2021, 10, 25, 10, 53, 40, 721, DateTimeKind.Local).AddTicks(6212),
>>>>>>> jani
                            ShipmentId = 3,
                            StatusId = 2
                        },
                        new
                        {
                            Id = 7,
<<<<<<< HEAD
                            Date = new DateTime(2021, 10, 25, 10, 55, 4, 906, DateTimeKind.Local).AddTicks(6266),
=======
                            Date = new DateTime(2021, 10, 25, 10, 53, 40, 721, DateTimeKind.Local).AddTicks(6215),
>>>>>>> jani
                            ShipmentId = 3,
                            StatusId = 3
                        },
                        new
                        {
                            Id = 8,
<<<<<<< HEAD
                            Date = new DateTime(2021, 10, 25, 10, 55, 4, 906, DateTimeKind.Local).AddTicks(6269),
=======
                            Date = new DateTime(2021, 10, 25, 10, 53, 40, 721, DateTimeKind.Local).AddTicks(6218),
>>>>>>> jani
                            ShipmentId = 4,
                            StatusId = 1
                        },
                        new
                        {
                            Id = 9,
<<<<<<< HEAD
                            Date = new DateTime(2021, 10, 25, 10, 55, 4, 906, DateTimeKind.Local).AddTicks(6272),
=======
                            Date = new DateTime(2021, 10, 25, 10, 53, 40, 721, DateTimeKind.Local).AddTicks(6220),
>>>>>>> jani
                            ShipmentId = 4,
                            StatusId = 2
                        },
                        new
                        {
                            Id = 10,
<<<<<<< HEAD
                            Date = new DateTime(2021, 10, 25, 10, 55, 4, 906, DateTimeKind.Local).AddTicks(6277),
=======
                            Date = new DateTime(2021, 10, 25, 10, 53, 40, 721, DateTimeKind.Local).AddTicks(6223),
>>>>>>> jani
                            ShipmentId = 5,
                            StatusId = 1
                        },
                        new
                        {
                            Id = 11,
<<<<<<< HEAD
                            Date = new DateTime(2021, 10, 25, 10, 55, 4, 906, DateTimeKind.Local).AddTicks(6280),
=======
                            Date = new DateTime(2021, 10, 25, 10, 53, 40, 721, DateTimeKind.Local).AddTicks(6226),
>>>>>>> jani
                            ShipmentId = 5,
                            StatusId = 2
                        },
                        new
                        {
                            Id = 12,
<<<<<<< HEAD
                            Date = new DateTime(2021, 10, 25, 10, 55, 4, 906, DateTimeKind.Local).AddTicks(6283),
=======
                            Date = new DateTime(2021, 10, 25, 10, 53, 40, 721, DateTimeKind.Local).AddTicks(6229),
>>>>>>> jani
                            ShipmentId = 5,
                            StatusId = 3
                        },
                        new
                        {
                            Id = 13,
<<<<<<< HEAD
                            Date = new DateTime(2021, 10, 25, 10, 55, 4, 906, DateTimeKind.Local).AddTicks(6286),
=======
                            Date = new DateTime(2021, 10, 25, 10, 53, 40, 721, DateTimeKind.Local).AddTicks(6232),
>>>>>>> jani
                            ShipmentId = 5,
                            StatusId = 4
                        },
                        new
                        {
                            Id = 14,
<<<<<<< HEAD
                            Date = new DateTime(2021, 10, 25, 10, 55, 4, 906, DateTimeKind.Local).AddTicks(6289),
=======
                            Date = new DateTime(2021, 10, 25, 10, 53, 40, 721, DateTimeKind.Local).AddTicks(6235),
>>>>>>> jani
                            ShipmentId = 6,
                            StatusId = 1
                        },
                        new
                        {
                            Id = 15,
<<<<<<< HEAD
                            Date = new DateTime(2021, 10, 25, 10, 55, 4, 906, DateTimeKind.Local).AddTicks(6293),
=======
                            Date = new DateTime(2021, 10, 25, 10, 53, 40, 721, DateTimeKind.Local).AddTicks(6237),
>>>>>>> jani
                            ShipmentId = 6,
                            StatusId = 2
                        },
                        new
                        {
                            Id = 16,
<<<<<<< HEAD
                            Date = new DateTime(2021, 10, 25, 10, 55, 4, 906, DateTimeKind.Local).AddTicks(6296),
=======
                            Date = new DateTime(2021, 10, 25, 10, 53, 40, 721, DateTimeKind.Local).AddTicks(6240),
>>>>>>> jani
                            ShipmentId = 7,
                            StatusId = 1
                        },
                        new
                        {
                            Id = 17,
<<<<<<< HEAD
                            Date = new DateTime(2021, 10, 25, 10, 55, 4, 906, DateTimeKind.Local).AddTicks(6299),
=======
                            Date = new DateTime(2021, 10, 25, 10, 53, 40, 721, DateTimeKind.Local).AddTicks(6243),
>>>>>>> jani
                            ShipmentId = 8,
                            StatusId = 1
                        },
                        new
                        {
                            Id = 18,
<<<<<<< HEAD
                            Date = new DateTime(2021, 10, 25, 10, 55, 4, 906, DateTimeKind.Local).AddTicks(6302),
=======
                            Date = new DateTime(2021, 10, 25, 10, 53, 40, 721, DateTimeKind.Local).AddTicks(6246),
>>>>>>> jani
                            ShipmentId = 8,
                            StatusId = 2
                        },
                        new
                        {
                            Id = 19,
<<<<<<< HEAD
                            Date = new DateTime(2021, 10, 25, 10, 55, 4, 906, DateTimeKind.Local).AddTicks(6305),
=======
                            Date = new DateTime(2021, 10, 25, 10, 53, 40, 721, DateTimeKind.Local).AddTicks(6249),
>>>>>>> jani
                            ShipmentId = 9,
                            StatusId = 1
                        },
                        new
                        {
                            Id = 20,
<<<<<<< HEAD
                            Date = new DateTime(2021, 10, 25, 10, 55, 4, 906, DateTimeKind.Local).AddTicks(6307),
=======
                            Date = new DateTime(2021, 10, 25, 10, 53, 40, 721, DateTimeKind.Local).AddTicks(6251),
>>>>>>> jani
                            ShipmentId = 10,
                            StatusId = 1
                        },
                        new
                        {
                            Id = 21,
<<<<<<< HEAD
                            Date = new DateTime(2021, 10, 25, 10, 55, 4, 906, DateTimeKind.Local).AddTicks(6311),
=======
                            Date = new DateTime(2021, 10, 25, 10, 53, 40, 721, DateTimeKind.Local).AddTicks(6254),
>>>>>>> jani
                            ShipmentId = 10,
                            StatusId = 2
                        },
                        new
                        {
                            Id = 22,
<<<<<<< HEAD
                            Date = new DateTime(2021, 10, 25, 10, 55, 4, 906, DateTimeKind.Local).AddTicks(6314),
=======
                            Date = new DateTime(2021, 10, 25, 10, 53, 40, 721, DateTimeKind.Local).AddTicks(6257),
>>>>>>> jani
                            ShipmentId = 10,
                            StatusId = 3
                        },
                        new
                        {
                            Id = 23,
<<<<<<< HEAD
                            Date = new DateTime(2021, 10, 25, 10, 55, 4, 906, DateTimeKind.Local).AddTicks(6318),
=======
                            Date = new DateTime(2021, 10, 25, 10, 53, 40, 721, DateTimeKind.Local).AddTicks(6260),
>>>>>>> jani
                            ShipmentId = 11,
                            StatusId = 1
                        },
                        new
                        {
                            Id = 24,
<<<<<<< HEAD
                            Date = new DateTime(2021, 10, 25, 10, 55, 4, 906, DateTimeKind.Local).AddTicks(6321),
=======
                            Date = new DateTime(2021, 10, 25, 10, 53, 40, 721, DateTimeKind.Local).AddTicks(6263),
>>>>>>> jani
                            ShipmentId = 11,
                            StatusId = 5
                        },
                        new
                        {
                            Id = 25,
<<<<<<< HEAD
                            Date = new DateTime(2021, 10, 25, 10, 55, 4, 906, DateTimeKind.Local).AddTicks(6324),
=======
                            Date = new DateTime(2021, 10, 25, 10, 53, 40, 721, DateTimeKind.Local).AddTicks(6266),
>>>>>>> jani
                            ShipmentId = 12,
                            StatusId = 1
                        },
                        new
                        {
                            Id = 26,
<<<<<<< HEAD
                            Date = new DateTime(2021, 10, 25, 10, 55, 4, 906, DateTimeKind.Local).AddTicks(6331),
=======
                            Date = new DateTime(2021, 10, 25, 10, 53, 40, 721, DateTimeKind.Local).AddTicks(6269),
>>>>>>> jani
                            ShipmentId = 13,
                            StatusId = 1
                        },
                        new
                        {
                            Id = 27,
<<<<<<< HEAD
                            Date = new DateTime(2021, 10, 25, 10, 55, 4, 906, DateTimeKind.Local).AddTicks(6334),
=======
                            Date = new DateTime(2021, 10, 25, 10, 53, 40, 721, DateTimeKind.Local).AddTicks(6272),
>>>>>>> jani
                            ShipmentId = 13,
                            StatusId = 2
                        },
                        new
                        {
                            Id = 28,
<<<<<<< HEAD
                            Date = new DateTime(2021, 10, 25, 10, 55, 4, 906, DateTimeKind.Local).AddTicks(6337),
=======
                            Date = new DateTime(2021, 10, 25, 10, 53, 40, 721, DateTimeKind.Local).AddTicks(6275),
>>>>>>> jani
                            ShipmentId = 13,
                            StatusId = 3
                        },
                        new
                        {
                            Id = 29,
<<<<<<< HEAD
                            Date = new DateTime(2021, 10, 25, 10, 55, 4, 906, DateTimeKind.Local).AddTicks(6340),
=======
                            Date = new DateTime(2021, 10, 25, 10, 53, 40, 721, DateTimeKind.Local).AddTicks(6278),
>>>>>>> jani
                            ShipmentId = 13,
                            StatusId = 4
                        },
                        new
                        {
                            Id = 30,
<<<<<<< HEAD
                            Date = new DateTime(2021, 10, 25, 10, 55, 4, 906, DateTimeKind.Local).AddTicks(6343),
=======
                            Date = new DateTime(2021, 10, 25, 10, 53, 40, 721, DateTimeKind.Local).AddTicks(6281),
>>>>>>> jani
                            ShipmentId = 14,
                            StatusId = 1
                        },
                        new
                        {
                            Id = 31,
<<<<<<< HEAD
                            Date = new DateTime(2021, 10, 25, 10, 55, 4, 906, DateTimeKind.Local).AddTicks(6347),
=======
                            Date = new DateTime(2021, 10, 25, 10, 53, 40, 721, DateTimeKind.Local).AddTicks(6283),
>>>>>>> jani
                            ShipmentId = 14,
                            StatusId = 2
                        },
                        new
                        {
                            Id = 32,
<<<<<<< HEAD
                            Date = new DateTime(2021, 10, 25, 10, 55, 4, 906, DateTimeKind.Local).AddTicks(6349),
=======
                            Date = new DateTime(2021, 10, 25, 10, 53, 40, 721, DateTimeKind.Local).AddTicks(6286),
>>>>>>> jani
                            ShipmentId = 14,
                            StatusId = 5
                        });
                });

            modelBuilder.Entity("boxinator.Models.Country", b =>
                {
                    b.HasOne("boxinator.Models.Domain.Zone", "Zone")
                        .WithMany("Countries")
                        .HasForeignKey("ZoneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Zone");
                });

            modelBuilder.Entity("boxinator.Models.Domain.Box", b =>
                {
                    b.HasOne("boxinator.Models.BoxType", "BoxType")
                        .WithMany("Boxes")
                        .HasForeignKey("BoxTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("boxinator.Models.Domain.Shipment", "Shipment")
                        .WithMany("Boxes")
                        .HasForeignKey("ShipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BoxType");

                    b.Navigation("Shipment");
                });

            modelBuilder.Entity("boxinator.Models.Domain.Shipment", b =>
                {
                    b.HasOne("boxinator.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("boxinator.Models.Domain.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Country");

                    b.Navigation("User");
                });

            modelBuilder.Entity("boxinator.Models.Domain.User", b =>
                {
                    b.HasOne("boxinator.Models.Country", "Country")
                        .WithMany("Users")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("boxinator.Models.ShipmentStatusLog", b =>
                {
                    b.HasOne("boxinator.Models.Domain.Shipment", "Shipment")
                        .WithMany("ShipmentStatusLogs")
                        .HasForeignKey("ShipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("boxinator.Models.Domain.Status", "Status")
                        .WithMany("ShipmentStatusLogs")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shipment");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("boxinator.Models.BoxType", b =>
                {
                    b.Navigation("Boxes");
                });

            modelBuilder.Entity("boxinator.Models.Country", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("boxinator.Models.Domain.Shipment", b =>
                {
                    b.Navigation("Boxes");

                    b.Navigation("ShipmentStatusLogs");
                });

            modelBuilder.Entity("boxinator.Models.Domain.Status", b =>
                {
                    b.Navigation("ShipmentStatusLogs");
                });

            modelBuilder.Entity("boxinator.Models.Domain.Zone", b =>
                {
                    b.Navigation("Countries");
                });
#pragma warning restore 612, 618
        }
    }
}
